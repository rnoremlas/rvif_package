[{"path":"/articles/The_rvif_package.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"The_rvif_package","text":"following presentation rvif package aims facilitate use. end, document divided four sections, dedicated functions make package. package focused determining whether degree approximate multicollinearity multiple linear regression model concern, meaning affects statistical analysis (.e. individual significance tests) model. Please note results presented based articles Salmerón, García García (2025) Salmerón, García García (working paper), see bibliography end document. start loading rvif library, turn loads multiColl package.","code":"library(rvif) #> Loading required package: multiColl #> Loading required package: car #> Warning: package 'car' was built under R version 4.4.3 #> Loading required package: carData #> Warning: package 'carData' was built under R version 4.4.3"},{"path":"/articles/The_rvif_package.html","id":"cv_vif-function","dir":"Articles","previous_headings":"","what":"cv_vif function","title":"The_rvif_package","text":"Given multiple linear regression model 𝐲=𝐗𝛃+𝐮,\\mathbf{y} = \\mathbf{X} \\boldsymbol{\\beta} +  \\mathbf{u}, design matrix 𝐗\\mathbf{X} contains observations independent variable columns, function cv_vif calculates Coefficients Variation (CV) Variance Inflation Factors (VIF) variable (column) contained 𝐗\\mathbf{X}. command arguments function follows: CVs VIFs calculated using existing functions multiColl package. Since functions require intercept model first column 𝐗\\mathbf{X}, design function matrix 𝐗\\mathbf{X} entered first argument cv_vif function intercept first column. issue crucial ensuring function works correctly.","code":"# cv_vif(x, tol = 1e-30)"},{"path":"/articles/The_rvif_package.html","id":"a-first-example-how-to-use-the-function","dir":"Articles","previous_headings":"cv_vif function","what":"A first example: how to use the function","title":"The_rvif_package","text":"illustrate issue function works, first use Wissel data available rvif package. details use help(Wissel). can seen, design matrix 𝐗\\mathbf{X} case formed last four columns. calculate CVs VIFs independent variable, following code must executed: alternative approach obtain design matrix independent variables specifying corresponding model using lm command model.matrix function: can seen, results obtained cases. According Salmerón, Rodríguez García (2020), Coefficient Variation (CV) useful detecting non-essential multicollinearity (relationship intercept least one remaining independent variables linear model). state specifically CV independent variable less 0.1002506, related intercept needs centered eliminate relationship. can seen Wissel data, degree non-essential multicollinearity strong. hand, according Salmerón, García García (2018), VIF able detect multicollinearity essential type (linear relationship least two independent variables linear model excluding intercept). VIF values suggest presence type multicollinearity, results clearly indicate exists Wissel data model.","code":"head(Wissel, n=5) #>      t      D cte      C      I     CP #> 1 1996 3.8051   1 4.7703 4.8786 808.23 #> 2 1997 3.9458   1 4.7784 5.0510 798.03 #> 3 1998 4.0579   1 4.9348 5.3620 806.12 #> 4 1999 4.1913   1 5.0998 5.5585 865.65 #> 5 2000 4.3585   1 5.2907 5.8425 997.30 x = Wissel[,-c(1,2)] cv_vif(x) #>                   CV      VIF #> Variable 2 0.1718940 589.7540 #> Variable 3 0.2482804 281.8862 #> Variable 4 0.3607848 189.4874 attach(Wissel)   reg_W = lm(D~C+I+CP) detach(Wissel)    x = model.matrix(reg_W) cv_vif(x) #>                   CV      VIF #> Variable 2 0.1718940 589.7540 #> Variable 3 0.2482804 281.8862 #> Variable 4 0.3607848 189.4874"},{"path":"/articles/The_rvif_package.html","id":"a-second-example-construction-of-the-design-matrix","dir":"Articles","previous_headings":"cv_vif function","what":"A second example: construction of the design matrix","title":"The_rvif_package","text":"Since concept multicollinearity affects independent variables model, possible detect multicollinearity without considering dependent variable. constructing design matrix directly, important note first column must correspond intercept, previously mentioned. following simulation illustrates situation: case, observed second variable causes non-essential multicollinearity, whereas relation second third variables cause essential multicollinearity (simulated data designed).","code":"set.seed(2025)      obs = 100     cte = rep(1, obs)     x2 = rnorm(obs, 5, 0.01) # variable with very little variability     x3 = rnorm(obs, 5, 10)     x4 = x3 + rnorm(obs, 5, 1) # fourth variable related to the third     x5 = rnorm(obs, -1, 30)     x = cbind(cte, x2, x3, x4, x5) # the first column has to be the intercept      cv_vif(x) #>                      CV        VIF #> Variable 2  0.002030169   1.025399 #> Variable 3  1.886093419 100.123352 #> Variable 4  0.961634537 100.320601 #> Variable 5 10.725968638   1.025810"},{"path":"/articles/The_rvif_package.html","id":"a-third-example-checking-some-errors","dir":"Articles","previous_headings":"cv_vif function","what":"A third example: checking some errors","title":"The_rvif_package","text":"follows, use data soil characteristics predictors forest diversity Bondell Reich’s paper. data set available rvif package. details, use help(soil). data set contains variable called Sum Cations sum concentrations calcium (Ca), magnesium (Mg), potassium (K) sodium (Na). reason, VIF calculation produces errors case. second argument function sets threshold used determine whether system computationally singular. Eliminating second variable allows results obtained without problem. now observed design matrix 14 variables, output provides information 13 (2 14). code designed eliminate first column design matrix (corresponds intercept). case, design matrix entered intercept first column. resulted elimination first variable. can resolved either entering constant manually design matrix, obtaining specification linear regression model. can seen variables 13 (pH) 14 (ExchAc) causing non-essential multicollinearity, variables, except 7 (Na), 8 (P), 10 (Zn) 11 (Mn), causing essential multicollinearity. design matrix constructed directly intercept positioned first column design matrix 𝐗\\mathbf{X}, following error message occurs:","code":"head(soil, n=5) #>   BaseSat SumCation CECbuffer     Ca     Mg      K    Na     P    Cu    Zn #> 1    2.34    0.1576     0.614 0.0892 0.0328 0.0256 0.010 0.000 0.080 0.184 #> 2    1.64    0.0970     0.516 0.0454 0.0218 0.0198 0.010 0.000 0.064 0.112 #> 3    5.20    0.4520     0.828 0.3306 0.0758 0.0336 0.012 0.240 0.136 0.350 #> 4    4.10    0.3054     0.698 0.2118 0.0536 0.0260 0.014 0.030 0.126 0.364 #> 5    2.70    0.2476     0.858 0.1568 0.0444 0.0304 0.016 0.384 0.078 0.376 #>      Mn HumicMatter Density    pH ExchAc Diversity #> 1 3.200      0.1220  0.0822 0.516  0.466 0.2765957 #> 2 2.734      0.0952  0.0850 0.512  0.430 0.2613982 #> 3 4.148      0.1822  0.0746 0.554  0.388 0.2553191 #> 4 3.728      0.1646  0.0756 0.546  0.408 0.2401216 #> 5 4.756      0.2472  0.0692 0.450  0.624 0.1884498      x = soil[,-16]      cv_vif(x) #> System is computationally singular. Modify the design matrix before running the code. x = soil[,-c(2,16)] cv_vif(x) #>                     CV          VIF #> Variable 2  0.26254488 65655.631992 #> Variable 3  0.93022708 49093.141906 #> Variable 4  0.56511827  2096.203209 #> Variable 5  0.24604041    78.315177 #> Variable 6  0.23242890     7.017204 #> Variable 7  1.41496855     5.451706 #> Variable 8  0.37215759    10.065882 #> Variable 9  0.42380972     8.879019 #> Variable 10 0.25216470     3.132565 #> Variable 11 0.28426257    31.738328 #> Variable 12 0.07203395    23.370488 #> Variable 13 0.06026917    22.221129 #> Variable 14 0.14073646  7609.600200 y = soil[,16] reg_S = lm(y~as.matrix(x)) cv_vif(model.matrix(reg_S)) #>                     CV          VIF #> Variable 2  0.52570466   196.097486 #> Variable 3  0.26254488 87577.945861 #> Variable 4  0.93022708 63996.254093 #> Variable 5  0.56511827  2478.282664 #> Variable 6  0.24604041    92.107236 #> Variable 7  0.23242890     8.320798 #> Variable 8  1.41496855     6.807994 #> Variable 9  0.37215759    11.966375 #> Variable 10 0.42380972     9.795579 #> Variable 11 0.25216470     3.476432 #> Variable 12 0.28426257    34.800524 #> Variable 13 0.07203395    26.743959 #> Variable 14 0.06026917    27.459519 #> Variable 15 0.14073646 10412.458323 cte = rep(1, length(y)) x = cbind(x, cte) cv_vif(x) #> There is a constant variable. Delete it before running the code or, if it is the intercept, it must be the first column of the design matrix."},{"path":"/articles/The_rvif_package.html","id":"a-fourth-example-the-special-case-of-the-simple-linear-regression-model","dir":"Articles","previous_headings":"cv_vif function","what":"A fourth example: the special case of the simple linear regression model","title":"The_rvif_package","text":"special case simple linear regression model, design matrix 𝐗\\mathbf{X} consists intercept second variable. case, makes sense calculate VIF since always equal 1 regardless observed values second variable (see Salmerón, Rodríguez García (2020) details). reason, execute cv_vif function, design matrix (first argument function) must two columns:","code":"cte = rep(1, obs) set.seed(2025) x2 = rnorm(obs, 3, 4)        x = cbind(cte, x2)  cv_vif(x) #> At least 3 independent variables are needed (including the interceptin the first column) to carry out the calculations."},{"path":"/articles/The_rvif_package.html","id":"final-warning-regarding-the-presence-of-binary-variables-in-the-model","dir":"Articles","previous_headings":"cv_vif function","what":"Final warning regarding the presence of binary variables in the model","title":"The_rvif_package","text":"code designed distinguish quantitative binary independent variables, users especially careful interpreting results involving binary variables. Note VIF binary variable calculated using coefficient determination regression binary variable treated dependent variable. However, coefficient determination generally considered inappropriate cases, models logit probit typically recommended binary outcomes. following example illustrates : calculations involving binary variable design matrix, X, performed without problem. However, like point reader associated VIF interpreted quantitative variable. recommend ignoring .","code":"set.seed(2025) x3 = rbinom(obs, 1, 0.5)      x = cbind(cte, x2, x3)   head(x, n=5) #>      cte       x2 x3 #> [1,]   1 5.483027  1 #> [2,]   1 3.142566  0 #> [3,]   1 6.092618  1 #> [4,]   1 8.089956  0 #> [5,]   1 4.483902  1  cv_vif(x) #>                   CV      VIF #> Variable 2 1.3630182 1.066598 #> Variable 3 0.9416966 1.066598"},{"path":"/articles/The_rvif_package.html","id":"cv_vif_plot-function","dir":"Articles","previous_headings":"","what":"cv_vif_plot function","title":"The_rvif_package","text":"cv_vif_plot function intended facilitate interpretation results provided cv_vif function. reason, input function (first argument) output cv_vif function. Consequently, represents scatter plot Coefficient Variation (CV) Variance Inflation Factor (VIF) independent variables (excluding intercept) multiple linear regression model. command arguments function follows: noted distinction essential non-essential multicollinearity limitations measure (CV VIF) detecting different kinds multicollinearity, can useful detect troubling degree multicollinearity, kind multicollinearity variables causing . purpose, important include representation scatter plot CV VIF lines corresponding established thresholds measure: dashed vertical line 0.1002506 (CV) dotted horizontal line 10 (VIF). lines determine four regions (see following graphical representation) can interpreted follows: : existence troubling non-essential non-troubling essential multicollinearity; B: existence troubling essential non-essential multicollinearity; C: existence non-troubling non-essential troubling essential multicollinearity; D: non-troubling degree existing multicollinearity (essential non-essential).","code":"# cv_vif_plot(x, limit = 40) plot(-2:20, -2:20, type = \"n\", xlab=\"Coefficient of Variation\", ylab=\"Variance Inflation Factor\")     abline(h=10, col=\"red\", lwd=3, lty=2)     abline(h=0, col=\"black\", lwd=1)     abline(v=0.1002506, col=\"red\", lwd=3, lty=3)  text(-1.25, 2, \"A\", pos=3, col=\"blue\") text(-1.25, 12, \"B\", pos=3, col=\"blue\") text(10, 12, \"C\", pos=3, col=\"blue\") text(10, 2, \"D\", pos=3, col=\"blue\")"},{"path":"/articles/The_rvif_package.html","id":"some-examples","dir":"Articles","previous_headings":"cv_vif_plot function","what":"Some examples","title":"The_rvif_package","text":"cv_vif_plot command applied Wissel data, clear three independent variables CV greater 0.1002506 (dashed vertical line) VIF greater 10 (dotted horizontal line). Therefore, can concluded immediately degree multicollinearity non-essential type strong, essential type .  cv_vif_plot function applied simulation second example cv_vif function, can observed second variable causes non-essential multicollinearity third fourth variables cause essential multicollinearity:","code":"x = Wissel[,-c(1,2)] cv_vif_plot(cv_vif(x)) set.seed(2025)      obs = 100     cte = rep(1, obs)     x2 = rnorm(obs, 5, 0.01) # variable with very little variability     x3 = rnorm(obs, 5, 10)     x4 = x3 + rnorm(obs, 5, 1) # fourth variable related to the third     x5 = rnorm(obs, -1, 30)     x = cbind(cte, x2, x3, x4, x5) # the first column has to be the intercept      cv_vif_plot(cv_vif(x)) cv_vif_plot(cv_vif(x), limit=0) # note how the 'limit' argument works"},{"path":"/articles/The_rvif_package.html","id":"rvifs-function","dir":"Articles","previous_headings":"","what":"rvifs function","title":"The_rvif_package","text":"paper, Salmerón, García García (2025) propose redefinition variance inflation factor (VIF) modifying reference orthogonal model. redefined VIF (RVIF) defined follows: RVIF()=𝐗𝐗𝐗𝐗−𝐗𝐗−⋅(𝐗−𝐗−)⋅𝐗−𝐗,RVIF() = \\frac{\\mathbf{X}_{}^{t} \\mathbf{X}_{}}{\\mathbf{X}_{}^{t} \\mathbf{X}_{} - \\mathbf{X}_{}^{t} \\mathbf{X}_{-} \\cdot \\left( \\mathbf{X}_{-}^{t} \\mathbf{X}_{-} \\right) \\cdot \\mathbf{X}_{-}^{t} \\mathbf{X}_{}}, shows, among questions, RVIF defined =1,2,…,ki=1,2,\\dots,k (suppose design matrix 𝐗\\mathbf{X} kk independent variables (columns)). contrast VIF, RVIF can therefore calculated intercept linear regression model. following considerations taken account: data expressed unit length, using transformation used calculate condition number, : RVIF()=11−𝐗𝐗−⋅(𝐗−𝐗−)⋅𝐗−𝐗,=1,…,k.RVIF() = \\frac{1}{1 - \\mathbf{X}_{}^{t} \\mathbf{X}_{-} \\cdot \\left( \\mathbf{X}_{-}^{t} \\mathbf{X}_{-} \\right) \\cdot \\mathbf{X}_{-}^{t} \\mathbf{X}_{}}, \\quad =1,\\dots,k. case (data expressed unit length), 𝐗\\mathbf{X}_{} orthogonal 𝐗−\\mathbf{X}_{-}, verified 𝐗𝐗−=𝟎\\mathbf{X}_{}^{t} \\mathbf{X}_{-} = \\mathbf{0} , consequently RVIF()=1RVIF() = 1 =1,…,ki=1,\\dots,k. , RVIF always greater equal 1 minimum value indicative absence multicollinearity. Denoted ai=𝐗𝐗⋅(𝐗−𝐗−)⋅𝐗−𝐗ia_{}= \\mathbf{X}_{}^{t} \\mathbf{X}_{} \\cdot \\left( \\mathbf{X}_{-}^{t} \\mathbf{X}_{-} \\right) \\cdot \\mathbf{X}_{-}^{t} \\mathbf{X}_{}, RVIF()=11−aiRVIF() = \\frac{1}{1-a_{}}, aia_{} can interpreted percentage approximate multicollinearity due variable 𝐗\\mathbf{X}_{}. Note similarity expression VIF expression: VIF()=11−Ri2VIF() = \\frac{1}{1-R_{}^{2}}. Finally, Salmerón, García García (2025) show, simulation k=3k=3, ai>0.826a_{} > 0.826, degree multicollinearity worrying. case, value refined considering higher number independent variables. short, necessary transform data, advisable better interpretation results (condition number). rvifs function calculates RVIF()RVIF() aia_{} values associated independent variable =1,2,…,ki=1,2,\\dots,k.command arguments function follows: can seen: first argument function refers design matrix 𝐗\\mathbf{X}. novelty design matrix, 𝐗\\mathbf{X}, may may intercept. specified third argument. intercept present, previous cases, must correspond first column 𝐗\\mathbf{X}. second argument indicates whether data transformed unit length (default value) whether transformation performed. last argument threshold determines whether system computationally singular, similar cv_vif function.","code":"# rvifs(x, ul = TRUE, intercept = TRUE, tol = 1e-30)"},{"path":"/articles/The_rvif_package.html","id":"some-examples-1","dir":"Articles","previous_headings":"rvifs function","what":"Some examples","title":"The_rvif_package","text":"rvifs function applied simulation second example cv_vif function, can observed variables (except last one) high RVIF values high percentage approximate multicollinearity: However, applied data soil characteristics, intercept design matrix, high values observed variables: Finally, applying rvif simple linear regression model, can determine degree non-essential multicollinearity: high degree non-essential multicollinearity detected variable little variability generated. variable centered solve detected problem, RVIFs coincide minimum value, indicating orthogonality elements design matrix: data transformed unit length, percentages multicollinearity due variable remain equal zero. However, since universal minimum reference value, interpreting RVIF becomes complicated: last example illustrates advisable transform data unit length calculating RVIF.","code":"set.seed(2025)      obs = 100     cte = rep(1, obs)     x2 = rnorm(obs, 5, 0.01) # variable with very little variability     x3 = rnorm(obs, 5, 10)     x4 = x3 + rnorm(obs, 5, 1) # fourth variable related to the third     x5 = rnorm(obs, -1, 30)     x = cbind(cte, x2, x3, x4, x5) # the first column has to be the intercept      rvifs(x) #>                    RVIF       % #> Intercept  2.495289e+05 99.9996 #> Variable 2 2.487886e+05 99.9996 #> Variable 3 1.282689e+02 99.2204 #> Variable 4 2.088057e+02 99.5211 #> Variable 5 1.034727e+00  3.3561 x = soil[,-16]     rvifs(x, intercept=FALSE) #> System is computationally singular. Modify the design matrix before running the code.     rvifs(x[,-2], intercept=FALSE) #>                     RVIF       % #> Variable 1  9.055351e+02 99.8896 #> Variable 2  1.346429e+06 99.9999 #> Variable 3  1.363495e+05 99.9993 #> Variable 4  1.019537e+04 99.9902 #> Variable 5  1.613634e+03 99.9380 #> Variable 6  1.483139e+02 99.3258 #> Variable 7  1.019762e+01 90.1938 #> Variable 8  9.835658e+01 98.9833 #> Variable 9  6.422169e+01 98.4429 #> Variable 10 5.591258e+01 98.2115 #> Variable 11 4.432249e+02 99.7744 #> Variable 12 4.653218e+03 99.9785 #> Variable 13 5.570325e+03 99.9820 #> Variable 14 5.334982e+05 99.9998 cte = rep(1, obs) set.seed(2025) x2 = rnorm(obs, 3, 4)        x = cbind(cte, x2)  rvifs(x) #>                RVIF       % #> Intercept  1.538266 34.9917 #> Variable 2 1.538266 34.9917 cte = rep(1, obs) set.seed(2025) x2 = rnorm(obs, 3, 0.04)        x = cbind(cte, x2)  rvifs(x) #>                RVIF       % #> Intercept  5459.413 99.9817 #> Variable 2 5459.413 99.9817 x2 = x2 - mean(x2)        x = cbind(cte, x2)  rvifs(x) #>            RVIF % #> Intercept     1 0 #> Variable 2    1 0 rvifs(x, ul=FALSE) #>                RVIF % #> Intercept  0.010000 0 #> Variable 2 6.065757 0"},{"path":"/articles/The_rvif_package.html","id":"multicollinearity-function","dir":"Articles","previous_headings":"","what":"multicollinearity function","title":"The_rvif_package","text":"now, measures degree multicollinearity multiple linear regression models used. However, never proven degree affects model analysis. working paper, Salmerón, García García propose statistical test determines whether degree multicollinearity affects statistical analysis model, based region non-rejection (depends level significance). specifically, test determines whether non-rejection null hypothesis individual significance tests coefficient associated independent variable due degree multicollinearity. Ultimately, decision rule test determined following result: Given multiple linear regression model 𝐲=𝐗𝛃+𝐮\\mathbf{y} = \\mathbf{X} \\boldsymbol{\\beta} +  \\mathbf{u}, degree multicollinearity affects statistical analysis (level significance α%\\alpha\\%) variable ii, =1,…,ki=1,\\dots,k, verifies RVIF()>max⁡{c0(),c3()}RVIF() > \\max \\{ c_{0}(), c_{3}() \\} : c0()=(β̂iσ̂⋅tn−k(1−α/2))2c_{0}() = \\left( \\frac{\\widehat{\\beta}_{}}{\\widehat{\\sigma} \\cdot t_{n-k}(1-\\alpha/2)} \\right)^{2} c3()=(tn−k(1−α/2)β̂,o)2⋅var̂(β̂),c_{3}() = \\left( \\frac{t_{n-k}(1-\\alpha/2)}{\\widehat{\\beta}_{,o}} \\right)^{2} \\cdot \\widehat{var} \\left( \\widehat{\\beta}_{} \\right), β̂\\widehat{\\beta}_{} OLS estimate βi\\beta_{}, var̂(β̂)\\widehat{var} \\left( \\widehat{\\beta}_{} \\right) estimated variance, β̂,o\\widehat{\\beta}_{,o} OLS estimate βi\\beta_{} orthogonal model, σ2\\sigma^{2} variance random disturbance, tn−k(1−α/2)t_{n-k}(1-\\alpha/2) theoretical value associated individual significance test. multicollinearity function allows check condition theorem using following code: first argument function refers dependent variable linear regression model. second relates design matrix containing independent variables third significance level considered statistical test. Note , cv_vif function, rvif command work correctly design matrix intercept first column. also noted , case, RVIF calculated without data transformed unit length, results obtained working paper Salmerón, García García assume transformation..","code":"# multicollinearity(y, x, alpha = 0.05)"},{"path":"/articles/The_rvif_package.html","id":"a-first-example-wissel-data","dir":"Articles","previous_headings":"multicollinearity function","what":"A first example: Wissel data","title":"The_rvif_package","text":"Wissel’s data outstanding mortgage debt, model considered jointly valid time rejected null hypothesis coefficient independent variables zero: Let us remember high degree essential multicollinearity determined due three independent variables. However, multicollinearity command used, can observed second affected detected problem: words, can concluded failure reject null hypothesis test associated personal consumption (C) variable due degree multicollinearity model.","code":"summary(reg_W) #>  #> Call: #> lm(formula = D ~ C + I + CP) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -1.2729 -0.7138  0.2853  0.7033  1.0711  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|) #> (Intercept)  5.469264  13.016791   0.420    0.681 #> C           -4.252429   5.135058  -0.828    0.423 #> I            3.120395   2.035671   1.533    0.149 #> CP           0.002879   0.005764   0.499    0.626 #>  #> Residual standard error: 0.9325 on 13 degrees of freedom #> Multiple R-squared:  0.9235, Adjusted R-squared:  0.9058  #> F-statistic:  52.3 on 3 and 13 DF,  p-value: 1.629e-07 y = Wissel[,2] x = Wissel[,3:6]      multicollinearity(y, x) #>          RVIFs           c0           c3 Scenario Affects #> 1 1.948661e+02 7.371069e+00 1.017198e+00      b.1     Yes #> 2 3.032628e+01 4.456018e+00 9.157898e-01      b.1     Yes #> 3 4.765888e+00 2.399341e+00 1.053598e+01      b.2      No #> 4 3.821626e-05 2.042640e-06 7.149977e-04      b.2      No"},{"path":"/articles/The_rvif_package.html","id":"a-second-example-klein-and-goldberger-data","dir":"Articles","previous_headings":"multicollinearity function","what":"A second example: Klein and Goldberger data","title":"The_rvif_package","text":"multiColl package contains data Klein Goldberger consumption wage income. , 5% significance level, null hypothesis rejected individual significance tests, null hypothesis rejected joint significance test. situation considered sign strong multicollinearity. Using multicollinearity command, possible determine statistical analysis second variable affected degree multicollinearity model:","code":"data(KG) attach(KG)   reg_KG = lm(consumption~wage.income+non.farm.income+farm.income) detach(KG)    summary(reg_KG) #>  #> Call: #> lm(formula = consumption ~ wage.income + non.farm.income + farm.income) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -13.494  -1.847   1.116   2.541   6.460  #>  #> Coefficients: #>                 Estimate Std. Error t value Pr(>|t|)   #> (Intercept)      18.7021     6.8454   2.732   0.0211 * #> wage.income       0.3803     0.3121   1.218   0.2511   #> non.farm.income   1.4186     0.7204   1.969   0.0772 . #> farm.income       0.5331     1.3998   0.381   0.7113   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 6.06 on 10 degrees of freedom #> Multiple R-squared:  0.9187, Adjusted R-squared:  0.8943  #> F-statistic: 37.68 on 3 and 10 DF,  p-value: 9.271e-06 head(KG, n=5) #>   consumption wage.income non.farm.income farm.income #> 1        62.8       43.41           17.10        3.96 #> 2        65.0       46.44           18.65        5.48 #> 3        63.9       44.35           17.09        4.37 #> 4        67.5       47.82           19.28        4.51 #> 5        71.3       51.02           23.24        4.88    y = KG[,1]   x = model.matrix(reg_KG)    multicollinearity(y, x) #>         RVIFs           c0           c3 Scenario Affects #> 1 1.275947615 1.9183829079 0.0021892653      a.1      No #> 2 0.002652862 0.0007931658 0.0001206694      b.1     Yes #> 3 0.014130621 0.0110372472 0.0187393601      b.2      No #> 4 0.053354814 0.0015584988 1.8265885762      b.2      No"},{"path":"/articles/The_rvif_package.html","id":"a-third-example-the-case-of-the-simple-linear-regresion","dir":"Articles","previous_headings":"multicollinearity function","what":"A third example: the case of the simple linear regresion","title":"The_rvif_package","text":"work Salmerón, García García (2025) illustrates limitations vif command car package detecting degree multicollinearity simple linear regression model. data used work purpose available rvif package. details, use help(SLM1) help(SLM2). first one used, vif command effectively indicates model fewer two terms perform calculations: words, denies possibility intercept form part model another independent variable , consequently, problem multicollinearity. However, multicollinearity command used, possible determine degree multicollinearity model whether affects statistical analysis model: degree multicollinearity affect statistical analysis model first data set, affect second: can observed significance level changed, values non-rejection region (determined values c0()c_{0}() $c_{3}()) change:","code":"head(SLM1, n=5) #>           y1 cte         V #> 1  82.392059   1 19.001420 #> 2  -1.942157   1 -1.733458 #> 3   7.474090   1  1.025146 #> 4 -12.303381   1 -4.445014 #> 5  30.378203   1  6.689864 attach(SLM1) #> The following object is masked _by_ .GlobalEnv: #>  #>     cte   reg_SLM1 = lm(y1~V) detach(SLM1)  library(car) vif(reg_SLM1) #> Error in vif.default(reg_SLM1): model contains fewer than 2 terms y = SLM1[,1] x = SLM1[,-1]  multicollinearity(y, x) #>          RVIFs        c0           c3 Scenario Affects #> 1 0.0403049717 0.6454323 1.045802e-05      a.1      No #> 2 0.0002675731 0.8383436 8.540101e-08      a.1      No head(SLM2, n=5) #>         y2 cte         Z #> 1 43.01204   1  9.978211 #> 2 40.04163   1  9.878235 #> 3 40.17086   1  9.924592 #> 4 40.79076   1 10.019123 #> 5 44.72774   1 10.104728    y = SLM2[,1]   x = SLM2[,-1]  multicollinearity(y, x) #>        RVIFs         c0         c3 Scenario Affects #> 1 187.800878 21.4798003 0.03277691      b.1     Yes #> 2   1.879296  0.3687652 9.57724567      b.2      No multicollinearity(y, x, alpha=0.01) #>        RVIFs         c0         c3 Scenario Affects #> 1 187.800878 12.0701590  0.0583291      b.1     Yes #> 2   1.879296  0.2072205 17.0434643      b.2      No"},{"path":"/articles/The_rvif_package.html","id":"a-fourth-example-soil-characteristics-data","dir":"Articles","previous_headings":"multicollinearity function","what":"A fourth example: soil characteristics data","title":"The_rvif_package","text":"Using rvif command soil characteristics data revealed variables high RVIF values high percentage multicollinearity. Meanwhile, using cv_vif command revealed pH ExchAc variables caused non-essential multicollinearity problem, variables except Na, P, Zn nad Mn caused essential multicollinearity. Using *multicollinearity** command, observed statistical analysis intercept, CECbuffer HumicMatter affected degree multicollinearity present:","code":"y = soil[,16] x = soil[,-16]  intercept = rep(1, length(y))  x = cbind(intercept, x) # the design matrix has to have the intercept in the first column    multicollinearity(y, x) #> System is computationally singular. Modify the design matrix before running the code.      multicollinearity(y, x[,-3]) # eliminating the problematic variable (SumCation) #>           RVIFs           c0           c3 Scenario Affects #> 1  4.407184e+02 6.150190e-03 1.480048e+00      b.1     Yes #> 2  3.828858e+00 1.142356e-02 7.653413e+00      b.2      No #> 3  1.093791e+05 1.254955e+02 7.236491e+04      b.1     Yes #> 4  9.883235e+04 3.938383e+01 2.237445e+05      b.2      No #> 5  1.767758e+05 1.101028e+03 3.609837e+05      b.2      No #> 6  1.150029e+05 1.627349e+03 1.976176e+05      b.2      No #> 7  4.627807e+04 5.960870e+02 2.033176e+06      b.2      No #> 8  1.338591e+01 6.062571e-01 4.060382e+02      b.2      No #> 9  3.113066e+02 4.089095e+01 5.246698e+05      b.2      No #> 10 5.177176e+01 6.371216e+00 8.094828e+02      b.2      No #> 11 1.905089e-01 3.907589e-02 9.787963e-01      b.2      No #> 12 3.379360e+02 4.534540e+01 2.861964e+02      b.1     Yes #> 13 4.761238e+04 8.453066e+01 3.828016e+08      b.2      No #> 14 1.502903e+03 7.901580e+01 9.961215e+03      b.2      No #> 15 1.066711e+05 2.369347e+02 4.802466e+07      b.2      No    names(x[,-3])   #>  [1] \"intercept\"   \"BaseSat\"     \"CECbuffer\"   \"Ca\"          \"Mg\"          #>  [6] \"K\"           \"Na\"          \"P\"           \"Cu\"          \"Zn\"          #> [11] \"Mn\"          \"HumicMatter\" \"Density\"     \"pH\"          \"ExchAc\""},{"path":"/articles/The_rvif_package.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"The_rvif_package","text":"Bondell, H.D. Reich. B.J. (2008). Simultaneous regression shrinkage, variable selection, supervised clustering predictors OSCAR. Biometrics, 64 (1), 115–23, doi: https://doi.org/10.1111/j.1541-0420.2007.00843.x. Salmerón, R., García, C.B. García, J. (2018). Variance Inflation Factor Condition Number multiple linear regression. Journal Statistical Computation Simulation, 88(12), 2365-2384, doi: https://doi.org/10.1080/00949655.2018.1463376. Salmerón, R., Rodríguez, . García, C.B. (2020). Diagnosis quantification non-essential collinearity. Computational Statistics, 35(2), 647-666, doi: https://doi.org/10.1007/s00180-019-00922-x. Salmerón, R., García, C.B. García, J. (2025). redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8. Overcoming inconsistences variance inflation factor: redefined VIF test detect statistical troubling multicollinearity Salmerón, R., García, C.B García, J. (working paper submitted R Journal, https://arxiv.org/pdf/2005.02245).","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R. Salmerón. Author, maintainer. C.B. García. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Salmerón R, García C (2025). rvif: Collinearity Detection using Redefined Variance Inflation Factor Graphical Methods. R package version 3.0, https://github.com/rnoremlas/rvif_package, http://colldetreat.r-forge.r-project.org/.","code":"@Manual{,   title = {rvif: Collinearity Detection using Redefined Variance Inflation Factor and Graphical Methods},   author = {R. Salmerón and C.B. García},   year = {2025},   note = {R package version 3.0, https://github.com/rnoremlas/rvif_package},   url = {http://colldetreat.r-forge.r-project.org/}, }"},{"path":"/reference/CDpf.html","id":null,"dir":"Reference","previous_headings":"","what":"Cobb-Douglas data — CDpf","title":"Cobb-Douglas data — CDpf","text":"Data used Example 2 Salmerón, García García (2024) (subsection 4.2) data Cobb-Douglas production function.","code":""},{"path":"/reference/CDpf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobb-Douglas data — CDpf","text":"","code":"data(\"CDpf\")"},{"path":"/reference/CDpf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cobb-Douglas data — CDpf","text":"data frame containing 28 observations following 4 variables: P Production (dependent variable). cte Intercept. logK Capital (logarithm). logW Work (logarithm).","code":""},{"path":"/reference/CDpf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cobb-Douglas data — CDpf","text":"dataset originally used Olva Maldonado (2009).","code":""},{"path":"/reference/CDpf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cobb-Douglas data — CDpf","text":"Olva Maldonado, H. (2009). Análisis de la función de producción Cobb-Douglas y su aplicación en el sector productivo mexicano. Tesis, Universidad Autónoma de Chapingo. Salmerón, R., García, C.B. García, J. (2025). redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8.","code":""},{"path":"/reference/CDpf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cobb-Douglas data — CDpf","text":"","code":"head(CDpf, n=5) #>          P cte     logK     logW #> 1 37641114   1 17.93734 15.55598 #> 2 42620804   1 18.01187 15.60544 #> 3 37989413   1 17.98800 15.54486 #> 4 40464915   1 18.00700 15.58605 #> 5 41002031   1 18.02283 15.59570   y = CDpf[,1]   x = CDpf[,2:4]     multicollinearity(y, x) #>         RVIFs           c0           c3 Scenario Affects #> 1 6388.881402 88495.933700   1.64951764      a.1      No #> 2    4.136993   207.628058   0.05043083      a.1      No #> 3   37.336325     9.445619 147.58213164      b.2      No"},{"path":"/reference/cv_vif.html","id":null,"dir":"Reference","previous_headings":"","what":"VIF and CV calculation — cv_vif","title":"VIF and CV calculation — cv_vif","text":"function provides values Variance Inflation Factor (VIF) Coefficient Variation (CV) independent variables (excluding intercept) multiple linear regression model.","code":""},{"path":"/reference/cv_vif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VIF and CV calculation — cv_vif","text":"","code":"cv_vif(x, tol = 1e-30)"},{"path":"/reference/cv_vif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VIF and CV calculation — cv_vif","text":"x numerical design matrix containing one regressor, including intercept first column. tol real number indicates tolerance beyond system considered computationally unique calculating VIF.        default value tol=1e-30.","code":""},{"path":"/reference/cv_vif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"VIF and CV calculation — cv_vif","text":"interesting note distinction essential non-essential multicollinearity. Essential multicollinearity happens approximate linear relationship two independent variables (including intercept) non-essential multicollinearity involves linear relationship intercept least one independent variable. distinction matters Variance Inflation Factor (VIF) detects essential multicollinearity, Condition Value (CV) useful detecting non-essential multicollinearity. Understanding distinction essential non-essential multicollinearity limitations detection measure, can useful identifying whether troubling degree multicollinearity, determining kind multicollinearity present variables causing .","code":""},{"path":"/reference/cv_vif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"VIF and CV calculation — cv_vif","text":"CV Coefficient Variation independent variable. VIF Variance Inflation Factor independent variable.","code":""},{"path":"/reference/cv_vif.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"VIF and CV calculation — cv_vif","text":"Salmerón, R., García, C.B. García, J. (2018). Variance inflation factor condition number multiple linear regression. Journal Statistical Computation Simulation, 88:2365-2384, doi: https://doi.org/10.1080/00949655.2018.1463376. Salmerón, R., Rodríguez, . García, C.B. (2020). Diagnosis quantification non-essential collinearity. Computational Statistics, 35(2), 647-666, doi: https://doi.org/10.1007/s00180-019-00922-x. Salmerón, R., García, C.B., Rodríguez, . García, C. (2022). Limitations detecting multicollinearity due scaling issues mcvis package. R Journal, 14(4), 264-279, doi: https://doi.org/10.32614/RJ-2023-010.","code":""},{"path":"/reference/cv_vif.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"VIF and CV calculation — cv_vif","text":"R. Salmerón (romansg@ugr.es) C. García (cbgarcia@ugr.es).","code":""},{"path":[]},{"path":"/reference/cv_vif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VIF and CV calculation — cv_vif","text":"","code":"### Example 1  ### At least three independent variables, including the intercept, must be present    head(SLM1, n=5) #>           y1 cte         V #> 1  82.392059   1 19.001420 #> 2  -1.942157   1 -1.733458 #> 3   7.474090   1  1.025146 #> 4 -12.303381   1 -4.445014 #> 5  30.378203   1  6.689864   y = SLM1[,1]   x = SLM1[,2:3]   cv_vif(x) #> At least 3 independent variables are needed (including the interceptin the first column) to carry out the calculations.  ### Example 2 ### Creating the design matrix    library(multiColl)   set.seed(2025)   obs = 100   cte = rep(1, obs)   x2 = rnorm(obs, 5, 0.01)   x3 = rnorm(obs, 5, 10)   x4 = x3 + rnorm(obs, 5, 1)   x5 = rnorm(obs, -1, 30)   x = cbind(cte, x2, x3, x4, x5)   cv_vif(x) #>                      CV        VIF #> Variable 2  0.002030169   1.025399 #> Variable 3  1.886093419 100.123352 #> Variable 4  0.961634537 100.320601 #> Variable 5 10.725968638   1.025810  ### Example 3  ### Obtaining the design matrix after executing the command 'lm'    library(multiColl)   set.seed(2025)   obs = 100   cte = rep(1, obs)   x2 = rnorm(obs, 5, 0.01)   x3 = rnorm(obs, 5, 10)   x4 = x3 + rnorm(obs, 5, 1)   x5 = rnorm(obs, -1, 30)   u = rnorm(obs, 0, 2)   y = 5 + 4*x2 - 5*x3 + 2*x4 - x5 + u   reg = lm(y~x2+x3+x4+x5)   x = model.matrix(reg)   cv_vif(x) # identical to Example 2 #>                      CV        VIF #> Variable 2  0.002030169   1.025399 #> Variable 3  1.886093419 100.123352 #> Variable 4  0.961634537 100.320601 #> Variable 5 10.725968638   1.025810  ### Example 3  ### Computationally singular system    head(soil, n=5) #>   BaseSat SumCation CECbuffer     Ca     Mg      K    Na     P    Cu    Zn #> 1    2.34    0.1576     0.614 0.0892 0.0328 0.0256 0.010 0.000 0.080 0.184 #> 2    1.64    0.0970     0.516 0.0454 0.0218 0.0198 0.010 0.000 0.064 0.112 #> 3    5.20    0.4520     0.828 0.3306 0.0758 0.0336 0.012 0.240 0.136 0.350 #> 4    4.10    0.3054     0.698 0.2118 0.0536 0.0260 0.014 0.030 0.126 0.364 #> 5    2.70    0.2476     0.858 0.1568 0.0444 0.0304 0.016 0.384 0.078 0.376 #>      Mn HumicMatter Density    pH ExchAc Diversity #> 1 3.200      0.1220  0.0822 0.516  0.466 0.2765957 #> 2 2.734      0.0952  0.0850 0.512  0.430 0.2613982 #> 3 4.148      0.1822  0.0746 0.554  0.388 0.2553191 #> 4 3.728      0.1646  0.0756 0.546  0.408 0.2401216 #> 5 4.756      0.2472  0.0692 0.450  0.624 0.1884498   y = soil[,16]   x = soil[,-16]   cv_vif(x) #> System is computationally singular. Modify the design matrix before running the code."},{"path":"/reference/cv_vif_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot of CV vs VIF — cv_vif_plot","title":"Scatterplot of CV vs VIF — cv_vif_plot","text":"function provides graphical representation scatter plot showing Coefficient Variation (CV) Variance Inflation Factor (VIF) independent variables (excluding intercept) multiple linear regression model.","code":""},{"path":"/reference/cv_vif_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot of CV vs VIF — cv_vif_plot","text":"","code":"cv_vif_plot(x, limit = 40)"},{"path":"/reference/cv_vif_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot of CV vs VIF — cv_vif_plot","text":"x output function cv_vif. limit real number indicates lower limit vertical axis. default value limit=40.","code":""},{"path":"/reference/cv_vif_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatterplot of CV vs VIF — cv_vif_plot","text":"distinction essential non-essential multicollinearity limitations measure (CV VIF)   detecting different kinds multicollinearity, can useful identifying whether troubling degree multicollinearity, determining kind multicollinearity present variables causing . purpose, important include lines corresponding established thresholds measure representation scatter plot CV VIF: dashed vertical line 0.1002506 (CV) dotted horizontal line 10 (VIF). lines determine four regions (see Example 1), can interpreted follows: : existence troubling non-essential non-troubling essential multicollinearity; B: existence troubling essential non-essential multicollinearity; C: existence non-troubling non-essential troubling essential multicollinearity; D: non-troubling degree existing multicollinearity (essential non-essential).","code":""},{"path":"/reference/cv_vif_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scatterplot of CV vs VIF — cv_vif_plot","text":"Salmerón, R., García, C.B. García, J. (2018). Variance inflation factor condition number multiple linear regression. Journal Statistical Computation Simulation, 88:2365-2384, doi: https://doi.org/10.1080/00949655.2018.1463376. Salmerón, R., Rodríguez, . García, C.B. (2020). Diagnosis quantification non-essential collinearity. Computational Statistics, 35(2), 647-666, doi: https://doi.org/10.1007/s00180-019-00922-x. Salmerón, R., García, C.B., Rodríguez, . García, C. (2022). Limitations detecting multicollinearity due scaling issues mcvis package. R Journal, 14(4), 264-279, doi: https://doi.org/10.32614/RJ-2023-010.","code":""},{"path":"/reference/cv_vif_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scatterplot of CV vs VIF — cv_vif_plot","text":"R. Salmerón (romansg@ugr.es) C.B. García (cbgarcia@ugr.es).","code":""},{"path":[]},{"path":"/reference/cv_vif_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot of CV vs VIF — cv_vif_plot","text":"","code":"### Example 1    plot(-2:20, -2:20, type = \"n\", xlab=\"Coefficient of Variation\",                                  ylab=\"Variance Inflation Factor\")   abline(h=10, col=\"red\", lwd=3, lty=2)   abline(h=0, col=\"black\", lwd=1)   abline(v=0.1002506, col=\"red\", lwd=3, lty=3)   #abline(v=0, col=\"red\", lwd=1)   text(-1.25, 2, \"A\", pos=3, col=\"blue\")   text(-1.25, 12, \"B\", pos=3, col=\"blue\")   text(10, 12, \"C\", pos=3, col=\"blue\")   text(10, 2, \"D\", pos=3, col=\"blue\")   ### Example 2    library(multiColl)   set.seed(2025)   obs = 100   cte = rep(1, obs)   x2 = rnorm(obs, 5, 0.01)   x3 = rnorm(obs, 5, 10)   x4 = x3 + rnorm(obs, 5, 1)   x5 = rnorm(obs, -1, 30)   x = cbind(cte, x2, x3, x4, x5)   cv_vif_plot(cv_vif(x))    cv_vif_plot(cv_vif(x), limit=0) # notes the effect of the 'limit' argument   ### Example 3 ### Graphical representation is not possible      head(SLM2, n=5) #>         y2 cte         Z #> 1 43.01204   1  9.978211 #> 2 40.04163   1  9.878235 #> 3 40.17086   1  9.924592 #> 4 40.79076   1 10.019123 #> 5 44.72774   1 10.104728   x = SLM2[,2:3]   cv_vif_plot(cv_vif(x)) #> At least 3 independent variables are needed (including the interceptin the first column) to carry out the calculations.    ### Example 4 ### Computationally singular system      head(soil, n=5) #>   BaseSat SumCation CECbuffer     Ca     Mg      K    Na     P    Cu    Zn #> 1    2.34    0.1576     0.614 0.0892 0.0328 0.0256 0.010 0.000 0.080 0.184 #> 2    1.64    0.0970     0.516 0.0454 0.0218 0.0198 0.010 0.000 0.064 0.112 #> 3    5.20    0.4520     0.828 0.3306 0.0758 0.0336 0.012 0.240 0.136 0.350 #> 4    4.10    0.3054     0.698 0.2118 0.0536 0.0260 0.014 0.030 0.126 0.364 #> 5    2.70    0.2476     0.858 0.1568 0.0444 0.0304 0.016 0.384 0.078 0.376 #>      Mn HumicMatter Density    pH ExchAc Diversity #> 1 3.200      0.1220  0.0822 0.516  0.466 0.2765957 #> 2 2.734      0.0952  0.0850 0.512  0.430 0.2613982 #> 3 4.148      0.1822  0.0746 0.554  0.388 0.2553191 #> 4 3.728      0.1646  0.0756 0.546  0.408 0.2401216 #> 5 4.756      0.2472  0.0692 0.450  0.624 0.1884498   x = soil[,-16]   cv_vif_plot(cv_vif(x)) #> System is computationally singular. Modify the design matrix before running the code."},{"path":"/reference/employees.html","id":null,"dir":"Reference","previous_headings":"","what":"Spanish company employee data — employees","title":"Spanish company employee data — employees","text":"Data used example 3 Salmerón, García García (2024) (subsection 4.3) number employees Spanish companies.","code":""},{"path":"/reference/employees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spanish company employee data — employees","text":"","code":"data(\"employees\")"},{"path":"/reference/employees.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spanish company employee data — employees","text":"data frame 15 observations following 5 variables: NE Number employees (dependent variable). cte Intercept. FA Fixed assets (euros). OI Operating income (euros). S Sales (euros).","code":""},{"path":"/reference/employees.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spanish company employee data — employees","text":"dataset originally used Salmerón, Rodríguez, García García (2020).","code":""},{"path":"/reference/employees.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spanish company employee data — employees","text":"Salmerón, R., Rodríguez, ., García, C.B. García, J. (2020). VIF MSE raise regression. Mathematics, 8(4), doi: https://doi.org/10.3390/math8040605. Salmerón, R., García, C.B. García, J. (2025). redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8.","code":""},{"path":"/reference/employees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spanish company employee data — employees","text":"","code":"head(employees, n=5) #>       NE cte       FA       OI        S #> 1   2637   1    44153    38903    38867 #> 2  15954   1  9389509  4293386  4231043 #> 3 162503   1 17374000 23703000 23649000 #> 4 162450   1  9723088 23310532 23310532 #> 5  28389   1 95980120 29827663 29215382   y = employees[,1]   x = employees[,3:5]   multicollinearity(y, x) #>          RVIFs           c0           c3 Scenario Affects #> 1 1.829154e-16 2.307712e-16 4.679301e-17      a.1      No #> 2 1.696454e-12 9.594942e-13 2.129511e-13      b.1     Yes #> 3 1.718535e-12 1.100437e-12 2.683809e-12      b.2      No"},{"path":"/reference/euribor.html","id":null,"dir":"Reference","previous_headings":"","what":"Euribor data — euribor","title":"Euribor data — euribor","text":"Data used example 1 Salmerón, García García (2024) (subsection 4.1) Euribor data.","code":""},{"path":"/reference/euribor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euribor data — euribor","text":"","code":"data(\"euribor\")"},{"path":"/reference/euribor.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Euribor data — euribor","text":"data frame 47 observations following 5 variables: E Euribor (dependent variable, percentage). cte Intercept. HIPC Harmonized index consumer prices (percentage). BC Balance payments net current account (millions euros). GD Goverment deficit net nonfinancial accounts (millions euros).","code":""},{"path":"/reference/euribor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Euribor data — euribor","text":"dataset originally used Salmerón, Rodríguez García (2020).","code":""},{"path":"/reference/euribor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Euribor data — euribor","text":"Salmerón, R., Rodríguez, . García, C.B. (2020). Diagnosis quantification non-essential collinearity. Computational Statistics, 35(2), 647-666, doi: https://doi.org/10.1007/s00180-019-00922-x. Salmerón, R., García, C.B. García, J. (2025). redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8.","code":""},{"path":"/reference/euribor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euribor data — euribor","text":"","code":"head(euribor, n=5) #>      E cte  HIPC    BC       GD #> 1 3.63   1 92.92 17211 -51384.0 #> 2 3.90   1 93.85  2724 -49567.1 #> 3 3.45   1 93.93 17232 -52128.4 #> 4 3.01   1 94.41  9577 -53593.3 #> 5 2.54   1 95.08  4117 -65480.0   y = euribor[,1]   x = euribor[,2:5]   multicollinearity(y, x) #>          RVIFs           c0           c3 Scenario Affects #> 1 5.325408e+00 1.575871e+01 2.166907e-02      a.1      No #> 2 5.357830e-04 3.219456e-06 4.249359e-05      b.1     Yes #> 3 5.109564e-11 1.098649e-09 2.586237e-12      a.1      No #> 4 1.631439e-11 3.216522e-10 8.274760e-13      a.1      No"},{"path":"/reference/multicollinearity.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","title":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","text":"Given multiple linear regression model n observations k independent variables, degree near-multicollinearity affects statistical analysis (level significance alpha%) variable , = 1,...,k, verifies null hypothesis rejected original model rejected orthogonal model reference.","code":""},{"path":"/reference/multicollinearity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","text":"","code":"multicollinearity(y, x, alpha = 0.05)"},{"path":"/reference/multicollinearity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","text":"y numerical vector representing dependent variable model. x numerical design matrix contain one regressor (intercept included first column). alpha Significance level (default, 5%).","code":""},{"path":"/reference/multicollinearity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","text":"function compares individual inference original model orthonormal model taken reference. Thus, null hypothesis rejected individual significance tests model linear relationships independent variables (orthonormal) rejected original model, reason non-rejection due existing linear relationships independent variables (multicollinearity) original model. second model obtained first model performing QR decomposition, eliminates initial linear relationships.","code":""},{"path":"/reference/multicollinearity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","text":"function returns value RVIF established thresholds, well indicating whether individual significance analysis affected multicollinearity chosen significance level.","code":""},{"path":"/reference/multicollinearity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","text":"Salmerón, R., García, C.B. García, J. (2025). Redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8. Overcoming inconsistences variance inflation factor: redefined VIF test detect statistical troubling multicollinearity Salmerón, R., García, C.B García, J. (working paper, https://arxiv.org/pdf/2005.02245).","code":""},{"path":"/reference/multicollinearity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","text":"Román Salmerón Gómez (University Granada) Catalina B. García García (University Granada). Maintainer: Román Salmerón Gómez (romansg@ugr.es)","code":""},{"path":[]},{"path":"/reference/multicollinearity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decision Rule to Detect Troubling Multicollinearity — multicollinearity","text":"","code":"### Example 1      set.seed(2024)   obs = 100   cte = rep(1, obs)   x2 = rnorm(obs, 5, 0.01)  # related to intercept: non essential   x3 = rnorm(obs, 5, 10)   x4 = x3 + rnorm(obs, 5, 0.5) # related to x3: essential   x5 = rnorm(obs, -1, 3)   x6 = rnorm(obs, 15, 0.5)   y = 4 + 5*x2 - 9*x3 -2*x4 + 2*x5 + 7*x6 + rnorm(obs, 0, 2)   x = cbind(cte, x2, x3, x4, x5, x6)   multicollinearity(y, x) #>          RVIFs          c0           c3 Scenario Affects #> 1 2.522626e+03 710.3979874 1.502436e-01      b.1     Yes #> 2 9.875420e+01  41.8217535 3.659512e-01      b.1     Yes #> 3 5.555945e-02   4.5808651 7.263924e-07      a.1      No #> 4 5.528041e-02   0.3113603 1.122944e-02      a.1      No #> 5 1.234970e-03   0.2585459 6.317865e-06      a.1      No #> 6 5.039751e-02   3.3626976 7.553190e-04      a.1      No  ### Example 2 ### Effect of sample size      obs = 25 # by decreasing the number of observations affected to x4    cte = rep(1, obs)   x2 = rnorm(obs, 5, 0.01)  # related to intercept: non essential   x3 = rnorm(obs, 5, 10)   x4 = x3 + rnorm(obs, 5, 0.5) # related to x3: essential   x5 = rnorm(obs, -1, 3)   x6 = rnorm(obs, 15, 0.5)   y = 4 + 5*x2 - 9*x3 -2*x4 + 2*x5 + 7*x6 + rnorm(obs, 0, 2)   x = cbind(cte, x2, x3, x4, x5, x6)   multicollinearity(y, x) #>          RVIFs           c0           c3 Scenario Affects #> 1 1.286600e+04 1.053297e+04 9.384591e-01      b.1     Yes #> 2 5.707087e+02 5.156288e+02 1.726140e+02      b.1     Yes #> 3 4.045355e-01 6.263143e+00 2.210555e-05      a.1      No #> 4 4.005247e-01 4.780367e-02 9.441789e-02      b.1     Yes #> 5 4.651546e-03 2.659262e-01 7.675577e-05      a.1      No #> 6 4.833250e-01 1.945277e+00 1.200872e-01      a.1      No  ### Example 3      y = 4 - 9*x3 - 2*x5 + rnorm(obs, 0, 2)   x = cbind(cte, x3, x5) # independently generated   multicollinearity(y, x) #>          RVIFs        c0           c3 Scenario Affects #> 1 0.0446929027 0.7442711 1.003540e-04      a.1      No #> 2 0.0004039021 4.2977544 3.601141e-08      a.1      No #> 3 0.0044674952 0.2131438 9.363871e-05      a.1      No    ### Example 4 ### Detection of multicollinearity in Wissel data      head(Wissel, n=5) #>      t      D cte      C      I     CP #> 1 1996 3.8051   1 4.7703 4.8786 808.23 #> 2 1997 3.9458   1 4.7784 5.0510 798.03 #> 3 1998 4.0579   1 4.9348 5.3620 806.12 #> 4 1999 4.1913   1 5.0998 5.5585 865.65 #> 5 2000 4.3585   1 5.2907 5.8425 997.30   y = Wissel[,2]   x = Wissel[,3:6]   multicollinearity(y, x) #>          RVIFs           c0           c3 Scenario Affects #> 1 1.948661e+02 7.371069e+00 1.017198e+00      b.1     Yes #> 2 3.032628e+01 4.456018e+00 9.157898e-01      b.1     Yes #> 3 4.765888e+00 2.399341e+00 1.053598e+01      b.2      No #> 4 3.821626e-05 2.042640e-06 7.149977e-04      b.2      No    ### Example 5 ### Detection of multicollinearity in euribor data      head(euribor, n=5) #>      E cte  HIPC    BC       GD #> 1 3.63   1 92.92 17211 -51384.0 #> 2 3.90   1 93.85  2724 -49567.1 #> 3 3.45   1 93.93 17232 -52128.4 #> 4 3.01   1 94.41  9577 -53593.3 #> 5 2.54   1 95.08  4117 -65480.0   y = euribor[,1]   x = euribor[,2:5]   multicollinearity(y, x) #>          RVIFs           c0           c3 Scenario Affects #> 1 5.325408e+00 1.575871e+01 2.166907e-02      a.1      No #> 2 5.357830e-04 3.219456e-06 4.249359e-05      b.1     Yes #> 3 5.109564e-11 1.098649e-09 2.586237e-12      a.1      No #> 4 1.631439e-11 3.216522e-10 8.274760e-13      a.1      No    ### Example 6 ### Detection of multicollinearity in Cobb-Douglas production function data    head(CDpf, n=5) #>          P cte     logK     logW #> 1 37641114   1 17.93734 15.55598 #> 2 42620804   1 18.01187 15.60544 #> 3 37989413   1 17.98800 15.54486 #> 4 40464915   1 18.00700 15.58605 #> 5 41002031   1 18.02283 15.59570   y = CDpf[,1]   x = CDpf[,2:4]     multicollinearity(y, x) #>         RVIFs           c0           c3 Scenario Affects #> 1 6388.881402 88495.933700   1.64951764      a.1      No #> 2    4.136993   207.628058   0.05043083      a.1      No #> 3   37.336325     9.445619 147.58213164      b.2      No    ### Example 7 ### Detection of multicollinearity in number of employees of Spanish companies data      head(employees, n=5) #>       NE cte       FA       OI        S #> 1   2637   1    44153    38903    38867 #> 2  15954   1  9389509  4293386  4231043 #> 3 162503   1 17374000 23703000 23649000 #> 4 162450   1  9723088 23310532 23310532 #> 5  28389   1 95980120 29827663 29215382   y = employees[,1]   x = employees[,3:5]   multicollinearity(y, x) #>          RVIFs           c0           c3 Scenario Affects #> 1 1.829154e-16 2.307712e-16 4.679301e-17      a.1      No #> 2 1.696454e-12 9.594942e-13 2.129511e-13      b.1     Yes #> 3 1.718535e-12 1.100437e-12 2.683809e-12      b.2      No    ### Example 8 ### Detection of multicollinearity in simple linear model simulated data      head(SLM1, n=5) #>           y1 cte         V #> 1  82.392059   1 19.001420 #> 2  -1.942157   1 -1.733458 #> 3   7.474090   1  1.025146 #> 4 -12.303381   1 -4.445014 #> 5  30.378203   1  6.689864   y = SLM1[,1]   x = SLM1[,2:3]   multicollinearity(y, x) #>          RVIFs        c0           c3 Scenario Affects #> 1 0.0403049717 0.6454323 1.045802e-05      a.1      No #> 2 0.0002675731 0.8383436 8.540101e-08      a.1      No    head(SLM2, n=5) #>         y2 cte         Z #> 1 43.01204   1  9.978211 #> 2 40.04163   1  9.878235 #> 3 40.17086   1  9.924592 #> 4 40.79076   1 10.019123 #> 5 44.72774   1 10.104728   y = SLM2[,1]   x = SLM2[,2:3]   multicollinearity(y, x) #>        RVIFs         c0         c3 Scenario Affects #> 1 187.800878 21.4798003 0.03277691      b.1     Yes #> 2   1.879296  0.3687652 9.57724567      b.2      No      ### Example 9 ### Detection of multicollinearity in soil characteristics data    head(soil, n=5) #>   BaseSat SumCation CECbuffer     Ca     Mg      K    Na     P    Cu    Zn #> 1    2.34    0.1576     0.614 0.0892 0.0328 0.0256 0.010 0.000 0.080 0.184 #> 2    1.64    0.0970     0.516 0.0454 0.0218 0.0198 0.010 0.000 0.064 0.112 #> 3    5.20    0.4520     0.828 0.3306 0.0758 0.0336 0.012 0.240 0.136 0.350 #> 4    4.10    0.3054     0.698 0.2118 0.0536 0.0260 0.014 0.030 0.126 0.364 #> 5    2.70    0.2476     0.858 0.1568 0.0444 0.0304 0.016 0.384 0.078 0.376 #>      Mn HumicMatter Density    pH ExchAc Diversity #> 1 3.200      0.1220  0.0822 0.516  0.466 0.2765957 #> 2 2.734      0.0952  0.0850 0.512  0.430 0.2613982 #> 3 4.148      0.1822  0.0746 0.554  0.388 0.2553191 #> 4 3.728      0.1646  0.0756 0.546  0.408 0.2401216 #> 5 4.756      0.2472  0.0692 0.450  0.624 0.1884498   y = soil[,16]   x = soil[,-16]    x = cbind(rep(1, length(y)), x) # the design matrix has to have the intercept in the first column   multicollinearity(y, x) #> System is computationally singular. Modify the design matrix before running the code.   multicollinearity(y, x[,-3]) # eliminating the problematic variable (SumCation) #>           RVIFs           c0           c3 Scenario Affects #> 1  4.407184e+02 6.150190e-03 1.480048e+00      b.1     Yes #> 2  3.828858e+00 1.142356e-02 7.653413e+00      b.2      No #> 3  1.093791e+05 1.254955e+02 7.236491e+04      b.1     Yes #> 4  9.883235e+04 3.938383e+01 2.237445e+05      b.2      No #> 5  1.767758e+05 1.101028e+03 3.609837e+05      b.2      No #> 6  1.150029e+05 1.627349e+03 1.976176e+05      b.2      No #> 7  4.627807e+04 5.960870e+02 2.033176e+06      b.2      No #> 8  1.338591e+01 6.062571e-01 4.060382e+02      b.2      No #> 9  3.113066e+02 4.089095e+01 5.246698e+05      b.2      No #> 10 5.177176e+01 6.371216e+00 8.094828e+02      b.2      No #> 11 1.905089e-01 3.907589e-02 9.787963e-01      b.2      No #> 12 3.379360e+02 4.534540e+01 2.861964e+02      b.1     Yes #> 13 4.761238e+04 8.453066e+01 3.828016e+08      b.2      No #> 14 1.502903e+03 7.901580e+01 9.961215e+03      b.2      No #> 15 1.066711e+05 2.369347e+02 4.802466e+07      b.2      No    ### Example 10 ### The intercept must be in the first column of the design matrix      set.seed(2025)   obs = 100   cte = rep(1, obs)   x2 = sample(1:500, obs)   x3 = sample(1:500, obs)   x4 = rep(4, obs)   x = cbind(cte, x2, x3, x4)   u = rnorm(obs, 0, 2)   y = 5 + 2*x2 - 3*x3 + 10*x4 + u   multicollinearity(y, x) #> There is a constant variable. Delete it before running the code or, if it is the intercept, it must be the first column of the design matrix. #> Perfect multicollinearity exists. Modify the design matrix before running the code.   multicollinearity(y, x[,-4]) # the constant variable is removed #>          RVIFs          c0           c3 Scenario Affects #> 1 7.404884e-02 121.0498871 4.062417e-07      a.1      No #> 2 4.750899e-07   0.2408853 9.995920e-13      a.1      No #> 3 4.977510e-07   0.5417202 4.573507e-13      a.1      No"},{"path":"/reference/rvif-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Detecting multicollinearity using RVIF and graphical methods. — rvif-package","title":"Detecting multicollinearity using RVIF and graphical methods. — rvif-package","text":"Detecting troubling near-multicollinearity multiple linear regression models classical econometric problem. purpose package detect using Redefined Variance Inflation Factor (RVIF) scatterplot Variance Inflation Factor (VIF) Coefficient Variation (CV). addition, RVIF used determine whether statistical analysis model affected degree multicollinearity model.","code":""},{"path":"/reference/rvif-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detecting multicollinearity using RVIF and graphical methods. — rvif-package","text":"package contains four functions. first two, cv_vif cv_vif_plot, respectively return values Variance Inflation Factor (VIF) Coefficient Variation (CV), well representation scatterplot. noted VIF useful detecting essential multicollinearity, CV useful detecting non-essential multicollinearity. Thus, scatterplot measures can provide interesting information determining whether troubling degree multicollinearity identifying type multicollinearity present variables causing . hand, funcion rvif calculates redefined VIF percentage approximate multicollinearity due independent variable. Finally, multicollinearity determines whether degree multicollinearity regression model affects statistical analysis model, .e., whether non-rejection null hypothesis individual significance tests due linear relationships independent variables model.","code":""},{"path":"/reference/rvif-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detecting multicollinearity using RVIF and graphical methods. — rvif-package","text":"Román Salmerón Gómez (University Granada) Catalina B. García García (University Granada). Maintainer: Román Salmerón Gómez (romansg@ugr.es)","code":""},{"path":"/reference/rvif-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detecting multicollinearity using RVIF and graphical methods. — rvif-package","text":"Salmerón, R., García, C.B. García, J. (2018). Variance inflation factor condition number multiple linear regression. Journal Statistical Computation Simulation, 88:2365-2384, doi: https://doi.org/10.1080/00949655.2018.1463376. Salmerón, R., Rodríguez, . García, C.B. (2020). Diagnosis quantification non-essential collinearity. Computational Statistics, 35(2), 647-666, doi: https://doi.org/10.1007/s00180-019-00922-x. Salmerón, R., García, C.B., Rodríguez, . García, C. (2022). Limitations detecting multicollinearity due scaling issues mcvis package. R Journal, 14(4), 264-279, doi: https://doi.org/10.32614/RJ-2023-010. Salmerón, R., García, C.B. García, J. (2025). redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8. Overcoming inconsistences variance inflation factor: redefined VIF test detect statistical troubling multicollinearity Salmerón, R., García, C.B García, J. (working paper, https://arxiv.org/pdf/2005.02245).","code":""},{"path":"/reference/rvifs.html","id":null,"dir":"Reference","previous_headings":"","what":"RVIF calculation — rvifs","title":"RVIF calculation — rvifs","text":"function provides values Redefined Variance Inflation Factor (RVIF) percentage near multicollinearity due independent variable.","code":""},{"path":"/reference/rvifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RVIF calculation — rvifs","text":"","code":"rvifs(x, ul = TRUE, intercept = TRUE, tol = 1e-30)"},{"path":"/reference/rvifs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RVIF calculation — rvifs","text":"x numerical design matrix contain one regressor. intercept, must           first column matrix). ul logical value indicates variables design matrix x transformed unit length.           default ul=TRUE. intercept logical value indicates design matrix x intercept. default intercept=TRUE. tol Value determining whether system computationally singular. default tol=1e-30.","code":""},{"path":"/reference/rvifs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RVIF calculation — rvifs","text":"Redefined Variation Inflation Factor (RVIF) capable detect kind multicollinearity: essential (approximate linear relationship least two independent variables excluding intercept) non-essential (approximate linear relationship intercept least one remaining independent variables). measure also quantifies percentage near multicollinearity due independent variable.","code":""},{"path":"/reference/rvifs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RVIF calculation — rvifs","text":"RVIF Redefined Variance Inflation Factor independent variable. % Percentage near multicollinearity due independent variable.","code":""},{"path":"/reference/rvifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RVIF calculation — rvifs","text":"R. Salmerón, C. García, J. García. (2018). Variance inflation factor condition number multiple linear regression. Journal Statistical Computation Simulation, 88:2365-2384, doi: https://doi.org/10.1080/00949655.2018.1463376. Salmerón, R., Rodríguez, . García, C.B. (2020). Diagnosis quantification non-essential collinearity. Computational Statistics, 35(2), 647-666, doi: https://doi.org/10.1007/s00180-019-00922-x. Salmerón, R., García, C.B. y García, J. (2025). redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8.","code":""},{"path":"/reference/rvifs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RVIF calculation — rvifs","text":"R. Salmerón (romansg@ugr.es) C. García (cbgarcia@ugr.es).","code":""},{"path":"/reference/rvifs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RVIF calculation — rvifs","text":"","code":"### Example 1      library(multiColl)   set.seed(2025)   obs = 100   cte = rep(1, obs)   x2 = rnorm(obs, 5, 0.01)   x3 = rnorm(obs, 5, 10)   x4 = x3 + rnorm(obs, 5, 1)   x5 = rnorm(obs, -1, 30)   x = cbind(cte, x2, x3, x4, x5)   rvifs(x) #>                    RVIF       % #> Intercept  2.495289e+05 99.9996 #> Variable 2 2.487886e+05 99.9996 #> Variable 3 1.282689e+02 99.2204 #> Variable 4 2.088057e+02 99.5211 #> Variable 5 1.034727e+00  3.3561    ### Example 2 ### The special case of the simple linear regression model      head(SLM1, n=5) #>           y1 cte         V #> 1  82.392059   1 19.001420 #> 2  -1.942157   1 -1.733458 #> 3   7.474090   1  1.025146 #> 4 -12.303381   1 -4.445014 #> 5  30.378203   1  6.689864   x = SLM1[,2:3]   rvifs(x) #>                RVIF       % #> Intercept  2.015249 50.3783 #> Variable 2 2.015249 50.3783    ### Example 3 ### The intercept must be in the first column of the design matrix      set.seed(2025)   obs = 100   cte = rep(1, obs)   x2 = sample(1:500, obs)   x3 = sample(1:500, obs)   x4 = rep(4, obs)   x = cbind(cte, x2, x3, x4)   rvifs(x) # also: perfect multicollinearity between the intercept and the constant variable #> There is a constant variable. Delete it before running the code or, if it is the intercept, it must be the first column of the design matrix. #> Perfect multicollinearity exists. Modify the design matrix before running the code.   rvifs(x[,-1], intercept = FALSE) # removing the constant from the design matrix #> There is a constant variable. Delete it before running the code or, if it is the intercept, it must be the first column of the design matrix.    ### Example 4 ### Cases of perfect multicollinearity or computationally singular systems      head(soil, n=5) #>   BaseSat SumCation CECbuffer     Ca     Mg      K    Na     P    Cu    Zn #> 1    2.34    0.1576     0.614 0.0892 0.0328 0.0256 0.010 0.000 0.080 0.184 #> 2    1.64    0.0970     0.516 0.0454 0.0218 0.0198 0.010 0.000 0.064 0.112 #> 3    5.20    0.4520     0.828 0.3306 0.0758 0.0336 0.012 0.240 0.136 0.350 #> 4    4.10    0.3054     0.698 0.2118 0.0536 0.0260 0.014 0.030 0.126 0.364 #> 5    2.70    0.2476     0.858 0.1568 0.0444 0.0304 0.016 0.384 0.078 0.376 #>      Mn HumicMatter Density    pH ExchAc Diversity #> 1 3.200      0.1220  0.0822 0.516  0.466 0.2765957 #> 2 2.734      0.0952  0.0850 0.512  0.430 0.2613982 #> 3 4.148      0.1822  0.0746 0.554  0.388 0.2553191 #> 4 3.728      0.1646  0.0756 0.546  0.408 0.2401216 #> 5 4.756      0.2472  0.0692 0.450  0.624 0.1884498   x = soil[,-16]   rvifs(x) #> System is computationally singular. Modify the design matrix before running the code."},{"path":"/reference/SLM1.html","id":null,"dir":"Reference","previous_headings":"","what":"First simulated data for the simple linear regression model — SLM1","title":"First simulated data for the simple linear regression model — SLM1","text":"First data used example 4 Salmerón, García García (2024) (subsection 4.4) special case simple linear model.","code":""},{"path":"/reference/SLM1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First simulated data for the simple linear regression model — SLM1","text":"","code":"data(\"SLM1\")"},{"path":"/reference/SLM1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"First simulated data for the simple linear regression model — SLM1","text":"data frame 50 observations following 3 variables: y1 Dependent variable simulated y = 3 + 4*V + u u normally distributed mean 0 variance 2. cte Intercept. V Simulated normal distribution mean 10 variance 100.","code":""},{"path":"/reference/SLM1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"First simulated data for the simple linear regression model — SLM1","text":"Salmerón, R., García, C.B. García, J. (2025). redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8.","code":""},{"path":"/reference/SLM1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"First simulated data for the simple linear regression model — SLM1","text":"","code":"head(SLM1, n=5) #>           y1 cte         V #> 1  82.392059   1 19.001420 #> 2  -1.942157   1 -1.733458 #> 3   7.474090   1  1.025146 #> 4 -12.303381   1 -4.445014 #> 5  30.378203   1  6.689864   y = SLM1[,1]   x = SLM1[,2:3]   multicollinearity(y, x) #>          RVIFs        c0           c3 Scenario Affects #> 1 0.0403049717 0.6454323 1.045802e-05      a.1      No #> 2 0.0002675731 0.8383436 8.540101e-08      a.1      No"},{"path":"/reference/SLM2.html","id":null,"dir":"Reference","previous_headings":"","what":"Second simulated data for the simple linear regression model — SLM2","title":"Second simulated data for the simple linear regression model — SLM2","text":"Second data used example 4 Salmerón, García García (2024)  (subsection 4.4) special case simple linear model.","code":""},{"path":"/reference/SLM2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second simulated data for the simple linear regression model — SLM2","text":"","code":"data(\"SLM2\")"},{"path":"/reference/SLM2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Second simulated data for the simple linear regression model — SLM2","text":"data frame 50 observations following 3 variables: y2 Dependent variable simulated y = 3 + 4*Z + u u normally distributed mean 0 variance 2. cte Intercept. Z Simulated normal distribution mean 10 variance 0.1.","code":""},{"path":"/reference/SLM2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Second simulated data for the simple linear regression model — SLM2","text":"Salmerón, R., García, C.B. García, J. (2025). redefined Variance Inflation Factor: overcoming limitations Variance Inflation Factor. Computational Economics, 65, 337-363, doi: https://doi.org/10.1007/s10614-024-10575-8.","code":""},{"path":"/reference/SLM2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second simulated data for the simple linear regression model — SLM2","text":"","code":"head(SLM2, n=5) #>         y2 cte         Z #> 1 43.01204   1  9.978211 #> 2 40.04163   1  9.878235 #> 3 40.17086   1  9.924592 #> 4 40.79076   1 10.019123 #> 5 44.72774   1 10.104728   y = SLM2[,1]   x = SLM2[,2:3]   multicollinearity(y, x) #>        RVIFs         c0         c3 Scenario Affects #> 1 187.800878 21.4798003 0.03277691      b.1     Yes #> 2   1.879296  0.3687652 9.57724567      b.2      No"},{"path":"/reference/soil.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil characteristics data — soil","title":"Soil characteristics data — soil","text":"Data used Bondell Reich's paper soil characteristics used predictors forest diversity.","code":""},{"path":"/reference/soil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil characteristics data — soil","text":"","code":"data(\"soil\")"},{"path":"/reference/soil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soil characteristics data — soil","text":"data frame 20 observations following 16 variables. BaseSat % Base Saturation. SumCation Sum Cations (sums cations like calcium, magnesium, potassium sodium). CECbuffer CEC. Ca Calcium. Mg Magnesium. K Potassium. Na Sodium. P Phosphorus. Cu Copper. Zn Zinc. Mn Manganese. HumicMatter Humic Matter. Density Density. pH pH. ExchAc Exchangeable Acidity. Diversity Forest diversity (dependent variable).","code":""},{"path":"/reference/soil.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil characteristics data — soil","text":"dataset originally used Bondell Reich (2008).","code":""},{"path":"/reference/soil.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soil characteristics data — soil","text":"Bondell, H.D. Reich. B.J. (2008). Simultaneous regression shrinkage, variable selection, supervised clustering predictors OSCAR. Biometrics, 64 (1), 115–23, doi: https://doi.org/10.1111/j.1541-0420.2007.00843.x.","code":""},{"path":"/reference/soil.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil characteristics data — soil","text":"","code":"head(soil, n=5) #>   BaseSat SumCation CECbuffer     Ca     Mg      K    Na     P    Cu    Zn #> 1    2.34    0.1576     0.614 0.0892 0.0328 0.0256 0.010 0.000 0.080 0.184 #> 2    1.64    0.0970     0.516 0.0454 0.0218 0.0198 0.010 0.000 0.064 0.112 #> 3    5.20    0.4520     0.828 0.3306 0.0758 0.0336 0.012 0.240 0.136 0.350 #> 4    4.10    0.3054     0.698 0.2118 0.0536 0.0260 0.014 0.030 0.126 0.364 #> 5    2.70    0.2476     0.858 0.1568 0.0444 0.0304 0.016 0.384 0.078 0.376 #>      Mn HumicMatter Density    pH ExchAc Diversity #> 1 3.200      0.1220  0.0822 0.516  0.466 0.2765957 #> 2 2.734      0.0952  0.0850 0.512  0.430 0.2613982 #> 3 4.148      0.1822  0.0746 0.554  0.388 0.2553191 #> 4 3.728      0.1646  0.0756 0.546  0.408 0.2401216 #> 5 4.756      0.2472  0.0692 0.450  0.624 0.1884498   y = soil[,16]   x = soil[,-16]    x = cbind(rep(1, length(y)), x) # the design matrix has to have the intercept in the first column   multicollinearity(y, x) #> System is computationally singular. Modify the design matrix before running the code.   multicollinearity(y, x[,-3]) # eliminating the problematic variable (SumCation) #>           RVIFs           c0           c3 Scenario Affects #> 1  4.407184e+02 6.150190e-03 1.480048e+00      b.1     Yes #> 2  3.828858e+00 1.142356e-02 7.653413e+00      b.2      No #> 3  1.093791e+05 1.254955e+02 7.236491e+04      b.1     Yes #> 4  9.883235e+04 3.938383e+01 2.237445e+05      b.2      No #> 5  1.767758e+05 1.101028e+03 3.609837e+05      b.2      No #> 6  1.150029e+05 1.627349e+03 1.976176e+05      b.2      No #> 7  4.627807e+04 5.960870e+02 2.033176e+06      b.2      No #> 8  1.338591e+01 6.062571e-01 4.060382e+02      b.2      No #> 9  3.113066e+02 4.089095e+01 5.246698e+05      b.2      No #> 10 5.177176e+01 6.371216e+00 8.094828e+02      b.2      No #> 11 1.905089e-01 3.907589e-02 9.787963e-01      b.2      No #> 12 3.379360e+02 4.534540e+01 2.861964e+02      b.1     Yes #> 13 4.761238e+04 8.453066e+01 3.828016e+08      b.2      No #> 14 1.502903e+03 7.901580e+01 9.961215e+03      b.2      No #> 15 1.066711e+05 2.369347e+02 4.802466e+07      b.2      No"},{"path":"/reference/Wissel.html","id":null,"dir":"Reference","previous_headings":"","what":"Wissel data — Wissel","title":"Wissel data — Wissel","text":"Wissel data outstanding mortgage debt.","code":""},{"path":"/reference/Wissel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wissel data — Wissel","text":"","code":"data(\"Wissel\")"},{"path":"/reference/Wissel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wissel data — Wissel","text":"data frame 17 observations following 6 variables: t Year. D Outstanding mortgage debt (dependent variable). cte Intercept. C Personal consumption (trillions dollars). Personal income (trillions dollars). CP Outstanding consumer credit (trillions dollars).","code":""},{"path":"/reference/Wissel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wissel data — Wissel","text":"Wissel, J. (2009). new biased estimator multivariate regression models highly collinear variables. Ph.D. thesis, Erlangung des naturwissenschaftlichen Doktorgrades der Bayerischen Julius-Maximilians-Universität Würzburg, url: https://opus.bibliothek.uni-wuerzburg.de/opus4-wuerzburg/frontdoor/deliver/index/docId/2949/file/wissel.pdf.","code":""},{"path":"/reference/Wissel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wissel data — Wissel","text":"","code":"head(Wissel, n=5) #>      t      D cte      C      I     CP #> 1 1996 3.8051   1 4.7703 4.8786 808.23 #> 2 1997 3.9458   1 4.7784 5.0510 798.03 #> 3 1998 4.0579   1 4.9348 5.3620 806.12 #> 4 1999 4.1913   1 5.0998 5.5585 865.65 #> 5 2000 4.3585   1 5.2907 5.8425 997.30   y = Wissel[,2]   x = Wissel[,3:6]   multicollinearity(y, x) #>          RVIFs           c0           c3 Scenario Affects #> 1 1.948661e+02 7.371069e+00 1.017198e+00      b.1     Yes #> 2 3.032628e+01 4.456018e+00 9.157898e-01      b.1     Yes #> 3 4.765888e+00 2.399341e+00 1.053598e+01      b.2      No #> 4 3.821626e-05 2.042640e-06 7.149977e-04      b.2      No"}]
